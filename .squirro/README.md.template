# Squirro Integration Setup

‚ö†Ô∏è  **CRITICAL WARNING: ALL FILES IN THIS DIRECTORY ARE TEMPLATES**  
‚ö†Ô∏è  **DO NOT USE AS-IS - THEY CONTAIN PLACEHOLDER VALUES**  
‚ö†Ô∏è  **SQUIRRO MUST EDIT ALL CONFIGURATION FILES FOR THEIR ENVIRONMENT**  

This directory contains setup scripts and templates for Squirro's fork of the UAE MXCP Server.

## Quick Start for Squirro Team

### 1. Fork and Clone
```bash
# Fork raw-labs/uae-mxcp-server to squirro/uae-mxcp-server on GitHub
git clone https://github.com/squirro/uae-mxcp-server.git
cd uae-mxcp-server
```

### 2. Run Setup Script
```bash
./.squirro/setup-for-squirro.sh
```

‚ö†Ô∏è  **This script creates TEMPLATE files that you MUST edit!**

The script will:
- Create `.github/.squirro-configured` marker
- Copy EKS deployment workflow template to `.github/workflows/`
- Update `mxcp-site.yml` to use `squirro` profile
- Add `upstream` remote for RAW Labs updates
- Create Squirro-specific dbt profiles template

üö® **AFTER running the script, you MUST edit the generated files!**

### 3. üö® CRITICAL: Edit Template Files

**You MUST customize these files before deployment:**

#### A. Edit `.github/workflows/deploy-eks.yml`:
- Replace `YOUR_EKS_CLUSTER_NAME` with your actual EKS cluster name
- Replace `YOUR_AWS_ACCOUNT_ID` with your actual AWS account ID
- Update ECR repository names if different
- Customize Kubernetes deployment names and namespaces
- Adjust resource limits and configurations

#### B. Edit `profiles-squirro.yml`:
- Update database paths for your environment
- Configure connection settings
- Adjust threading and performance settings

### 4. Configure GitHub Secrets
In your forked repository, add these secrets with YOUR actual values:
- `AWS_ACCOUNT_ID` - Your actual AWS account ID (not placeholder)
- `AWS_ACCESS_KEY_ID` - Your EKS access key
- `AWS_SECRET_ACCESS_KEY` - Your EKS secret key
- `EKS_CLUSTER_NAME` - Your actual EKS cluster name
- `OPENAI_API_KEY` - For testing (optional)

### 5. Test Before Deployment
```bash
# Test locally first to ensure everything works
./scripts/run_etl_and_tests.sh
```

### 6. Deploy (Only After Customization)
```bash
# ‚ö†Ô∏è  ONLY after editing all template files:
git add -A
git commit -m "Configure for Squirro EKS deployment"
git push origin main  # Triggers EKS deployment
```

## Getting Updates from RAW Labs

```bash
# Merge latest changes from RAW Labs
./scripts/merge-from-raw.sh

# Test the updates
./scripts/run_etl_and_tests.sh

# Deploy updated version
git push origin main
```

## üö® MANDATORY CUSTOMIZATION CHECKLIST

Before deploying, Squirro MUST edit these files:

### ‚úÖ Files You MUST Customize:
- [ ] `.github/workflows/deploy-eks.yml` - Replace ALL placeholder values
  - [ ] `YOUR_AWS_ACCOUNT_ID` ‚Üí Your actual AWS account ID
  - [ ] `YOUR_EKS_CLUSTER_NAME` ‚Üí Your actual EKS cluster name
  - [ ] ECR repository names ‚Üí Your actual repository names
  - [ ] Kubernetes deployment names ‚Üí Your actual deployment names
  - [ ] Resource limits ‚Üí Your actual requirements

- [ ] `profiles-squirro.yml` - Update database configuration
  - [ ] Database paths ‚Üí Your actual paths
  - [ ] Connection settings ‚Üí Your actual settings
  - [ ] Performance configs ‚Üí Your actual requirements

- [ ] GitHub repository secrets ‚Üí Your actual values (not placeholders)

### ‚ö†Ô∏è  Consequences of Not Customizing:
- **Deployment will fail** with invalid cluster names
- **Wrong AWS account** will be targeted
- **Database connections will fail** with wrong paths
- **Security issues** with placeholder credentials

## Files in This Directory

- `setup-for-squirro.sh` - One-time setup script (creates templates)
- `workflows/deploy-eks.yml` - EKS deployment template (MUST be edited)
- `README.md` - This file

## Support

For integration issues, contact:
- **RAW Labs**: Pavlos Polydoras (pavlos@raw-labs.com)
- **MXCP Technical**: RAW Labs Support
